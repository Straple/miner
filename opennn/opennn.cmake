#cmake_minimum_required(VERSION 2.8.12)

#project(opennn)

add_library(OPENNN OBJECT
        /opennn/adaptive_moment_estimation.cpp
        batch_normalization_layer.cpp
        bounding_box_regressor_layer.cpp
        bounding_layer.cpp
        codification.cpp
        conjugate_gradient.cpp
        convolutional_layer.cpp
        correlations.cpp
        cross_entropy_error.cpp
        data_set.cpp
        flatten_layer.cpp
        genetic_algorithm.cpp
        gradient_descent.cpp
        growing_inputs.cpp
        growing_neurons.cpp
        inputs_selection.cpp
        json_to_xml.cpp
        layer.cpp
        learning_rate_algorithm.cpp
        levenberg_marquardt_algorithm.cpp
        long_short_term_memory_layer.cpp
        loss_index.cpp
        mean_squared_error.cpp
        minkowski_error.cpp
        model_selection.cpp
        neural_network.cpp
        neurons_selection.cpp
        non_max_suppression_layer.cpp
        normalized_squared_error.cpp
        numerical_differentiation.cpp
        opennn_images.cpp
        opennn_strings.cpp
        optimization_algorithm.cpp
        perceptron_layer.cpp
        pooling_layer.cpp
        probabilistic_layer.cpp
        pruning_inputs.cpp
        quasi_newton_method.cpp
        recurrent_layer.cpp
        region_based_object_detector.cpp
        region_proposal_layer.cpp
        response_optimization.cpp
        scaling.cpp
        scaling_layer.cpp
        statistics.cpp
        stochastic_gradient_descent.cpp
        sum_squared_error.cpp
        tensor_utilities.cpp
        testing_analysis.cpp
        text_analytics.cpp
        tinyxml2.cpp
        training_strategy.cpp
        unit_testing.cpp
        unscaling_layer.cpp
        weighted_squared_error.cpp)
